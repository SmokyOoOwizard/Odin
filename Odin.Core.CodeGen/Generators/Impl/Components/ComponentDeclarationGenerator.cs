using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;
using Odin.CodeGen.Abstractions;
using Odin.Core.CodeGen.Utils;

namespace Odin.Core.CodeGen.Generators.Impl.Components;

[Generator]
public class ComponentDeclarationGenerator : AComponentIncrementalGenerator
{
    protected override void GenerateCode(GeneratorExecutionContext context, IEnumerable<INamedTypeSymbol> components)
    {
        var namespaceName = context.Compilation.AssemblyName;

        var groupedComponents = components
                               .Select(s =>
                                {
                                    var fullName = s.OriginalDefinition.ToDisplayString();

                                    var members = s.GetMembers();

                                    var processedMembers = ComponentFieldCodeGen.GetCodeFieldDeclarations(members);

                                    var code = $@"
         Component<{fullName}>()
             .WithName(""{fullName}"")
             .WithId(TypeComponentUtils.GetComponentTypeId<{fullName}>())
             {string.Join("\n\t\t\t", processedMembers)}
             .Build();
                                         ";

                                    return new
                                    {
                                        s.DeclaredAccessibility,
                                        Code = code
                                    };
                                })
                               .GroupBy(c => c.DeclaredAccessibility);

        foreach (var group in groupedComponents)
        {
            var accessibility = group.Key.ToString();


            var code = $@"
// <auto-generated/>

using Odin.Core.Components.Declaration;
using Odin.Core.Components.Declaration.Builder.States;
using Odin.Core.Abstractions.Components.Declarations;
using Odin.Utils;

namespace {namespaceName};

{accessibility.ToLower()} class {accessibility}ComponentDeclarations : AComponentDeclarations<{accessibility}ComponentDeclarations>
{{
    protected override void Configure()
    {{
{string.Join("\n\n", group.Select(c => c.Code))}
    }}
}}
";

            context.AddSource($"{accessibility}ComponentDeclarations.g.cs", SourceText.From(code, Encoding.UTF8));
        }
    }
}